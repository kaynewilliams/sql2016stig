---
- name: Combined SQL Server Configuration
  hosts: all
  gather_facts: true
  become: yes
  become_method: runas
  become_user: WinLabAAP #is admin

  vars:
    permission: "VIEW ANY DATABASE"  # Real Permissions
    sql_instance_id: "WIN-8FEC7TK3JN0\\SQLEXPRESS" # Specify the SQL Server instance name here

  tasks:

    - name: Install NuGet provider
      win_shell: |
        Install-PackageProvider -Name NuGet -Force -Scope CurrentUser
      become: yes
      become_user: WinLabAAP

    - name: Install pymssql Python module
      win_shell: |
        Install-Module -Name pymssql -Force
      become: yes
      become_user: WinLabAAP
      environment:
        PYTHONIOENCODING: UTF-8

    - name: Configure SQL Server Concurrent Session Limit
      win_shell: |
        $triggerCode = @"
          CREATE TRIGGER SQL_STIG_Connection_Limit 
          ON ALL SERVER WITH EXECUTE AS 'renamed_sa' 
          FOR LOGON 
          AS 
          BEGIN 
            IF (SELECT COUNT(1) FROM sys.dm_exec_sessions WHERE is_user_process = 1 AND original_login_name = ORIGINAL_LOGIN()) > 
              (CASE ORIGINAL_LOGIN()
                WHEN 'renamed_sa' THEN 40
                WHEN 'domain/ima.dba' THEN 150
                WHEN 'application1_login' THEN 6
                WHEN 'application2_login' THEN 20
                ELSE 1
              END)
            BEGIN 
                PRINT 'The login [' + ORIGINAL_LOGIN() + '] has exceeded its concurrent session limit.' 
                ROLLBACK; 
            END
          END;
        "@
        Invoke-Sqlcmd -Query $triggerCode -ServerInstance 'localhost' -Database 'master'
      environment:
        PYTHONIOENCODING: UTF-8
      ignore_errors: true

    - name: Check CEIP Participation
      win_shell: |
        $CEIPPath = "HKLM:\Software\Microsoft\Microsoft SQL Server\{{ sql_instance_id }}\CPE"
        Get-ItemProperty -Path $CEIPPath -Name "CustomerFeedback" | Select-Object -ExpandProperty "CustomerFeedback"
      register: customer_feedback

    - name: Check Enable Error Reporting
      win_shell: |
        $CPEPath = "HKLM:\Software\Microsoft\Microsoft SQL Server\{{ sql_instance_id }}\CPE"
        Get-ItemProperty -Path $CPEPath -Name "EnableErrorReporting" | Select-Object -ExpandProperty "EnableErrorReporting"
      register: enable_error_reporting

    - name: Check CEIP Participation (Version 130)
      win_shell: |
        $CEIPPath_130 = "HKLM:\Software\Microsoft\Microsoft SQL Server\130"
        Get-ItemProperty -Path $CEIPPath_130 -Name "CustomerFeedback" | Select-Object -ExpandProperty "CustomerFeedback"
      register: customer_feedback_130

    - name: Check Enable Error Reporting (Version 130)
      win_shell: |
        $CPEPath_130 = "HKLM:\Software\Microsoft\Microsoft SQL Server\130"
        Get-ItemProperty -Path $CPEPath_130 -Name "EnableErrorReporting" | Select-Object -ExpandProperty "EnableErrorReporting"
      register: enable_error_reporting_130

    - name: Ensure CEIP is Disabled
      win_shell: |
        $CEIPPath = "HKLM:\Software\Microsoft\Microsoft SQL Server\{{ sql_instance_id }}\CPE"
        Set-ItemProperty -Path $CEIPPath -Name "CustomerFeedback" -Value 0
      when: customer_feedback.stdout == "1"

    - name: Ensure Error Reporting is Disabled
      win_shell: |
        $CPEPath = "HKLM:\Software\Microsoft\Microsoft SQL Server\{{ sql_instance_id }}\CPE"
        Set-ItemProperty -Path $CPEPath -Name "EnableErrorReporting" -Value 0
      when: enable_error_reporting.stdout == "1"

    - name: Ensure CEIP is Disabled (Version 130)
      win_shell: |
        $CEIPPath_130 = "HKLM:\Software\Microsoft\Microsoft SQL Server\130"
        Set-ItemProperty -Path $CEIPPath_130 -Name "CustomerFeedback" -Value 0
      when: customer_feedback_130.stdout == "1"

    - name: Ensure Error Reporting is Disabled (Version 130)
      win_shell: |
        $CPEPath_130 = "HKLM:\Software\Microsoft\Microsoft SQL Server\130"
        Set-ItemProperty -Path $CPEPath_130 -Name "EnableErrorReporting" -Value 0
      when: enable_error_reporting_130.stdout == "1"
